// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Dropdown_type_error', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Dropdown_type_error', async function() {
    // Test name: Dropdown_type_error
    // Step # | name | target | value
    // 1 | open | http://localhost:3000/ | 
    await driver.get("http://localhost:3000/")
    // 2 | setWindowSize | 800x619 | 
    await driver.manage().window().setRect(800, 619)
    // 3 | runScript | window.scrollTo(0,0) | 
    await driver.executeScript("window.scrollTo(0,0)")
    // 4 | click | css=.content | 
    await driver.findElement(By.css(".content")).click()
    // 5 | click | linkText=Report | 
    await driver.findElement(By.linkText("Report")).click()
    // 6 | click | css=.structure | 
    await driver.findElement(By.css(".structure")).click()
    // 7 | select | css=.structure | label=Graph error
    {
      const dropdown = await driver.findElement(By.css(".structure"))
      await dropdown.findElement(By.xpath("//option[. = 'Graph error']")).click()
    }
    // 8 | click | css=.structure | 
    await driver.findElement(By.css(".structure")).click()
    // 9 | click | css=.structure | 
    await driver.findElement(By.css(".structure")).click()
    // 10 | select | css=.structure | label=Other error
    {
      const dropdown = await driver.findElement(By.css(".structure"))
      await dropdown.findElement(By.xpath("//option[. = 'Other error']")).click()
    }
    // 11 | click | css=.structure | 
    await driver.findElement(By.css(".structure")).click()
  })
})
